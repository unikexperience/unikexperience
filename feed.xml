<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Unik Blog</title>
		<description>Unik is full service digital company located in Helsinki &amp; Casablanca</description>
		<link>/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production</link>
		<atom:link href="/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>First post</title>
				<excerpt>...</excerpt>
				<description>
</description>
				<pubDate>Sat, 23 Mar 2013 00:00:00 +0000</pubDate>
				<link>/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production/2013/03/23/first-post.html</link>
				<guid isPermaLink="true">/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production/2013/03/23/first-post.html</guid>
			</item>
		
			<item>
				<title>Hacking the &lt;a&gt; tag in 100 characters</title>
				<excerpt>A short while ago, I discovered that JavaScript allows you to change a link after you click on it, causing the possibility for phishing.</excerpt>
				<description>&lt;p&gt;A short while ago, I discovered that JavaScript allows you to &lt;strong&gt;change the &amp;lt;a&amp;gt; href &lt;em&gt;after&lt;/em&gt; you click on it&lt;/strong&gt;. It may not seem that serious at first glance, but rest assured, it can trick customers into giving in their details to fraudsters.&lt;/p&gt;

&lt;p&gt;Let me show you an example. &lt;a href=&quot;http://www.paypal.co.uk/&quot; class=&quot;hijack&quot;&gt;This link should take you to PayPal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You'll see that you &lt;strong&gt;do not&lt;/strong&gt; end up on PayPal (&lt;em&gt;except on Opera, where it appears to have been fixed&lt;/em&gt;). That's because when you clicked on the link, I ran some code that changed the &lt;em&gt;href&lt;/em&gt; attribute and, surprisingly, the browser sent me to the &lt;em&gt;new link&lt;/em&gt;. &lt;strong&gt;That shouldn't happen&lt;/strong&gt;. Website visitors (and perhaps most tech-savvy people) can and will presume where they end up could just be a genuine redirection from, in this case, PayPal. Last year, PayPal redirected their UK homepage to paypal-business.co.uk for months. My assumption is website visitors have grown accustom to redirections, and if this flaw acts as such, it can pose a real threat &lt;s&gt;to what I call &lt;em&gt;Phishing 2.0&lt;/em&gt;&lt;/s&gt;.&lt;/p&gt;

&lt;p&gt;Let's take a look at the JavaScript:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Uncompressed&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://bit.ly/141nisR&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Compressed (was 100; now 67 characters exc. the link)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Thanks to sgoel from HN&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;//bit.ly/141nisR&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's also very difficult to detect. Almost &lt;em&gt;everyone&lt;/em&gt; who uses JavaScript/jQuery will bind an event to an &amp;lt;a&amp;gt; tag, so it's not as simple as unbinding every &amp;lt;a&amp;gt; onclick function. It's very much possible to wrap the code above to a &lt;em&gt;setTimeout&lt;/em&gt; to bypass whatever solution can be found. Any half-decent hacker can make a computer virus or embeddable JavaScript code that can inject this code alongside another piece of software. As it's incredibly easy to update JavaScript (particularly embeddable), I would say that tools such as McAfeeSecure and PhishTank won't be able to keep up with phishing websites up to the second.&lt;/p&gt;

&lt;p&gt;&lt;s&gt;As it shows no real benefit, I'm pledging to &lt;a href=&quot;http://www.w3.org&quot;&gt;World Wide Web Consortium (W3C)&lt;/a&gt; and major browsers to disable the option to change the &lt;em&gt;href&lt;/em&gt; attribute &lt;strong&gt;after an onclick event&lt;/strong&gt;. It is an incredibly simple interpreter flaw, and whilst it may seem normal to some, it can be used for ill-fated purposes rather than good. I'm aware Google and websites as such use this, but if we're suppose to making the web safer, we can't allow for what can be simple flaws to exist. There are alternatives (such as using the genuine link rather than masking it), and for that reason, it should be disabled. It's not worth internet users being victims of fraud and theft.&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update (19/3) &amp;mdash;&lt;/em&gt; My new pledge is to &lt;strong&gt;warn users if the location of a link changes to a different domain after they click on it&lt;/strong&gt; (&lt;a href=&quot;http://www.reddit.com/user/abadidea&quot;&gt;+1 to abididea&lt;/a&gt;). Sites like Google and Facebook can continue operating normally as they use the same domain, the internet doesn't break, and it eliminates the possibility of phishing. Everyone wins (except phishers, of course!). I &lt;strong&gt;need your help&lt;/strong&gt; to make major browsers adopt this as quickly as possible. Let's make it one less easy way for fraudsters to victimize internet users.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update (19/3) &amp;mdash;&lt;/em&gt; I've suggested the fix to Firefox, and waiting for a response.&lt;/p&gt;
</description>
				<pubDate>Sun, 17 Mar 2013 00:00:00 +0000</pubDate>
				<link>/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production/2013/03/17/hacking-the-a-tag-in-100-characters.html</link>
				<guid isPermaLink="true">/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production/2013/03/17/hacking-the-a-tag-in-100-characters.html</guid>
			</item>
		
			<item>
				<title>Bye WordPress, Hello Jekyll</title>
				<excerpt>Today, I moved my blog from WordPress to Amazon S3 on Jekyll, a static-site generator built by Tom Preston-Werner, the co-founder of GitHub.</excerpt>
				<description>&lt;p&gt;Today, I moved my &lt;a href=&quot;http://wordpress.org&quot;&gt;WordPress&lt;/a&gt; blog to &lt;a href=&quot;http://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;. It's one of the best decisions I've made for my blogging. Jekyll is a static-site generator built in Ruby by &lt;a href=&quot;http://tom.preston-werner.com&quot;&gt;Tom Preston-Werner&lt;/a&gt;. I actually had an idea similar to Jekyll about 2 years ago, but I never got the chance to hack on it and so I suggested it at a hackathon I recently attended in Manchester; everyone directed me to Jekyll. That was when I first heard of Jekyll, and shortly after, I knew it was worth a try. After much deliberation about going live with it, I pushed it and I'm not looking back.&lt;/p&gt;

&lt;p&gt;So, why do I love Jekyll? &lt;em&gt;It is perfect by being imperfect&lt;/em&gt; (you'll hear me saying that a lot). Jekyll isn't intuitive, but it is simple. Similarly, it's not popular, but it's incredibly stable. Within a few hours of building my new site, I knew this was exactly what I envisioned all those years ago. I can confidently say that I won't be going back to WordPress, ever (unless I'm held captive). I've quickly seen that WordPress has quickly grown into a content management system (or CMS) that's competing with the likes of Magento, Drupal and Joomla in efforts to boost its possible use cases (especially for the larger sites). I understand why, because that's where &lt;em&gt;the money is&lt;/em&gt;, but as a long adopter, I feel like WordPress has lost its roots. &lt;em&gt;It's too good for it's own good&lt;/em&gt;. I hate that I become distracted trying to see what new plugins and themes are available, even though I updated it last week. Computationally, without a doubt, it definitely makes it easier to blog. Psychologically, on the other hand, is what I'm questioning. I obviously think the latter is of bigger importance.&lt;/p&gt;

&lt;p&gt;After writing my first blog post, I realized that I &lt;em&gt;could&lt;/em&gt; concentrate on my content. I remember on WordPress, where I would always have nothing written up during those free hours I had to commit and to not have distractions is when you realize you didn't need those &quot;convenient&quot; features. Writing, like many human tasks in the digital age, require &lt;strong&gt;isolation for concentration&lt;/strong&gt;. It's already well-publicized that humans have the &lt;a href=&quot;http://news.bbc.co.uk/1/hi/1834682.stm&quot;&gt;same attention span as goldfish&lt;/a&gt;, so it would be pretty obvious to remove any potential distractions unless it's &lt;strong&gt;really&lt;/strong&gt; (x 10&amp;#94;10) mandatory.&lt;/p&gt;

&lt;p&gt;I strongly believe the popularity of static-site generators like Jekyll will surge in popularity between 2013-14. We've already seen JavaScript and CSS3 capable of replacing server-side features such as &lt;a href=&quot;http://disqus.com&quot;&gt;Disqus&lt;/a&gt;, &lt;a href=&quot;http://livefyre.com&quot;&gt;Livefyre&lt;/a&gt;, &lt;a href=&quot;https://developers.facebook.com/docs/reference/plugins/comments/&quot;&gt;Facebook Comments&lt;/a&gt;, etc.) and analytics (&lt;a href=&quot;http://analytics.google.com&quot;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&quot;http://mixpanel.com&quot;&gt;Mixpanel&lt;/a&gt;, etc. I'm hosting my blog using &lt;a href=&quot;http://appfog.com&quot;&gt;AppFog&lt;/a&gt;, though you're free to use GitHub Pages or Amazon S3. Benefits of using Jekyll are it becomes infinitely scalable, super-fast to render, higher uptime, easier to maintain and of course *mdash; increased focus!&lt;/p&gt;

&lt;p&gt;Even though I'm a newbie at Jekyll, I have instantaneously felt its part in boosting my focus and productivity. Mix Jekyll with &lt;a href=&quot;http://informationarchitects.net&quot;&gt;iA Writer&lt;/a&gt; and you'll write some fantastic stuff. I've even freely published the source powering this website &lt;a href=&quot;http://github.com/bih/bilaw.al&quot;&gt;on GitHub&lt;/a&gt;. You'll be surprised by how easier your life becomes when &lt;strong&gt;it is not possible&lt;/strong&gt; to be distracted by software.&lt;/p&gt;
</description>
				<pubDate>Thu, 14 Mar 2013 00:00:00 +0000</pubDate>
				<link>/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production/2013/03/14/goodbye-wordpress-hello-jekyll.html</link>
				<guid isPermaLink="true">/Users/Ismail/Ressources/Development/Ruby/learn/blog/bilaw.al/_production/2013/03/14/goodbye-wordpress-hello-jekyll.html</guid>
			</item>
		
	</channel>
</rss>